# CircleCI configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

references:
  restore_keys: &restore_keys
    keys:
      - python-env-v1-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "requirements-test.txt" }}-{{ checksum "requirements-precommit.txt" }}-{{ checksum ".pre-commit-config.yaml" }}

  save_key: &save_key
    key: python-env-v1-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "requirements-test.txt" }}-{{ checksum "requirements-precommit.txt" }}-{{ checksum ".pre-commit-config.yaml" }}

jobs:
  pre-checks:
    docker:
      - image: circleci/python:3.9

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          <<: *restore_keys

      - run:
          name: Install pre-check dependencies
          command: |
            pip install --progress-bar off --user -U -r requirements-precommit.txt

      - run:
          name: Run pre-checks
          command: |
            PRE_COMMIT_HOME=.pre-commit-cache pre-commit run --all-files --show-diff-on-failure

      - save_cache:
          <<: *save_key
          paths:
            - ".pre-commit-cache"


  linux-python-39: &test-template
    environment:
      SIGNAC_VERSION: "signac"
    docker:
      - image: circleci/python:3.9

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            pip install -U virtualenv --user
            mkdir -p ./venv
            python -m virtualenv ./venv
            . venv/bin/activate
            python -m pip install --progress-bar off ${SIGNAC_VERSION}
            python -m pip install --progress-bar off -r requirements.txt
            python -m pip install --progress-bar off -r requirements-test.txt
            python -m pip install --progress-bar off -U codecov

      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            python -m pytest --cov=flow --cov-config=setup.cfg --cov-report=xml tests/ -v
            codecov

      - store_artifacts:
          path: test-reports
          destination: test-reports

  linux-python-39-signac-10:
    <<: *test-template
    environment:
      SIGNAC_VERSION: "signac~=1.0.0"
  linux-python-39-signac-13:
    <<: *test-template
    environment:
      SIGNAC_VERSION: "signac~=1.3.0"
  linux-python-39-signac-14:
    <<: *test-template
    environment:
      SIGNAC_VERSION: "signac~=1.4.0"
  linux-python-39-signac-latest:
    <<: *test-template
    environment:
      SIGNAC_VERSION: "git+ssh://git@github.com/glotzerlab/signac.git"
  linux-python-38:
    <<: *test-template
    docker:
      - image: circleci/python:3.8
  linux-python-37:
    <<: *test-template
    docker:
      - image: circleci/python:3.7
  linux-python-36:
    <<: *test-template
    docker:
      - image: circleci/python:3.6

  check-metadata:
    docker:
      - image: circleci/python:3.9

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: install-dev-requirements
          command: |
            pip install --user -U -r requirements-test.txt

      - run:
          name: check-citation-metadata
          command: |
            ./.sync-zenodo-metadata.py --check > /dev/null

  test-deploy-pypi:
    docker:
      - image: circleci/python:3.9
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: test-deploy-pypi
          command: |
            bash .circleci/deploy.bash testpypi

  deploy-pypi:
    docker:
      - image: circleci/python:3.9
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: deploy-pypi
          command: |
            bash .circleci/deploy.bash pypi


workflows:
  version: 2
  test:
    jobs:
      - pre-checks
      - linux-python-39:
          requires:
            - pre-checks
      - linux-python-38:
          requires:
            - pre-checks
      - linux-python-37:
          requires:
            - pre-checks
      - linux-python-36:
          requires:
            - pre-checks
      - linux-python-39-signac-10:
          requires:
            - linux-python-39
      - linux-python-39-signac-13:
          requires:
            - linux-python-39
      - linux-python-39-signac-14:
          requires:
            - linux-python-39
      - check-metadata:
          filters:
            branches:
              only: /release\/.*/
      - test-deploy-pypi:
          filters:
            branches:
              only: /release\/.*/
          requires:
            - linux-python-39
            - linux-python-38
            - linux-python-37
            - linux-python-36
            - linux-python-39-signac-10
            - linux-python-39-signac-13
            - linux-python-39-signac-14
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - linux-python-39-signac-latest
  deploy:
    jobs:
      - deploy-pypi:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
