# CircleCI configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

orbs:
  codecov: codecov/codecov@3.2.2

references:
  restore_keys: &restore_keys
    keys:
      - python-env-v1-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "requirements/requirements-test.txt" }}-{{ checksum ".circleci/ci-oldest-reqs.txt" }}

  save_key: &save_key
    key: python-env-v1-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "requirements/requirements-test.txt" }}-{{ checksum ".circleci/ci-oldest-reqs.txt" }}

jobs:
  linux-python-310: &test-template
    docker:
      - image: cimg/python:3.10

    environment:
      DEPENDENCIES: "NEWEST"
      SIGNAC_VERSION: "signac"
      PYTHON: python

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            ${PYTHON} -m pip install --progress-bar off -U virtualenv --user
            mkdir -p ./venv
            ${PYTHON} -m virtualenv ./venv --clear
            . venv/bin/activate
            ${PYTHON} -m pip install --progress-bar off -U pip>=20.3
            ${PYTHON} -m pip install --progress-bar off ${SIGNAC_VERSION}
            # DEPENDENCIES can be "OLDEST" or "NEWEST"
            if [ "${DEPENDENCIES}" == "OLDEST" ]; then
              ${PYTHON} -m pip install --progress-bar off -r .circleci/ci-oldest-reqs.txt
            else
              ${PYTHON} -m pip install --progress-bar off -r requirements.txt
              ${PYTHON} -m pip install --progress-bar off -r requirements/requirements-test.txt
            fi

      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            ${PYTHON} -m pytest --cov=flow --cov-config=setup.cfg --cov-report=xml tests/ -v

      - store_artifacts:
          path: test-reports
          destination: test-reports

  linux-python-310-signac-16:
    <<: *test-template
    environment:
      DEPENDENCIES: "NEWEST"
      SIGNAC_VERSION: "signac~=1.6.0"
      PYTHON: python
  linux-python-310-signac-15:
    <<: *test-template
    environment:
      DEPENDENCIES: "NEWEST"
      SIGNAC_VERSION: "signac~=1.5.0"
      PYTHON: python
  linux-python-310-signac-latest:
    <<: *test-template
    environment:
      DEPENDENCIES: "NEWEST"
      SIGNAC_VERSION: "git+ssh://git@github.com/glotzerlab/signac.git"
      PYTHON: python
  linux-python-310-signac-next:
    <<: *test-template
    environment:
      DEPENDENCIES: "NEWEST"
      SIGNAC_VERSION: "git+ssh://git@github.com/glotzerlab/signac.git@next"
      PYTHON: python
  linux-python-39:
    <<: *test-template
    docker:
      - image: cimg/python:3.9
  linux-python-38:
    <<: *test-template
    docker:
      - image: cimg/python:3.8
  linux-python-38-oldest:
    <<: *test-template
    docker:
      - image: cimg/python:3.8
    environment:
      DEPENDENCIES: "OLDEST"
      SIGNAC_VERSION: "signac==1.3.0"
      PYTHON: python

  test-install-pip-python-310: &test-install-pip
    docker:
      - image: cimg/python:3.10

    environment:
      PYTHON: python

    steps:

      - run:
          name: install-with-pip
          command: |
            ${PYTHON} -m pip install --progress-bar off signac signac-flow

      - run: &smoke-test
          name: smoke-test
          command: |
            ${PYTHON} -m signac --version
            ${PYTHON} -c 'import signac'
            ${PYTHON} -m flow --version
            ${PYTHON} -c 'import flow'

  test-install-pip-python-39:
    <<: *test-install-pip
    docker:
      - image: cimg/python:3.9

  test-install-pip-python-38:
    <<: *test-install-pip
    docker:
      - image: cimg/python:3.8

  test-install-conda: &test-install-conda
    environment:
      # The default job does not specify the version, just like the
      # instructions.
      PYTHON_DEP: ""
      PYTHON: python
    docker:
      - image: conda/miniconda3:latest

    steps:

      - run:
          name: install-with-conda
          command: |
            conda install -c conda-forge signac signac-flow ${PYTHON_DEP} --yes

      - run:
          <<: *smoke-test

  test-install-conda-python-310:
    <<: *test-install-conda
    environment:
      PYTHON_DEP: "python=3.10"
      PYTHON: python

  test-install-conda-python-39:
    <<: *test-install-conda
    environment:
      PYTHON_DEP: "python=3.9"
      PYTHON: python

  test-install-conda-python-38:
    <<: *test-install-conda
    environment:
      PYTHON_DEP: "python=3.8"
      PYTHON: python

  check-metadata:
    docker:
      - image: cimg/python:3.10

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: install-dev-requirements
          command: |
            pip install --user -U -r requirements/requirements-test.txt

      - run:
          name: check-citation-metadata
          command: |
            ./.sync-zenodo-metadata.py --check > /dev/null

  test-deploy-pypi:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: test-deploy-pypi
          command: |
            bash .circleci/deploy.bash testpypi

  deploy-pypi:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: deploy-pypi
          command: |
            bash .circleci/deploy.bash pypi


workflows:
  version: 2
  test:
    jobs:
      - linux-python-310:
          post-steps:
            - codecov/upload
      - linux-python-39:
          post-steps:
            - codecov/upload
      - linux-python-38:
          post-steps:
            - codecov/upload
      - linux-python-38-oldest:
          post-steps:
            - codecov/upload
      - linux-python-310-signac-16:
          requires:
            - linux-python-310
          post-steps:
            - codecov/upload
      - linux-python-310-signac-15:
          requires:
            - linux-python-310
          post-steps:
            - codecov/upload
      - check-metadata:
          filters:
            branches:
              only: /release\/.*/
      - test-deploy-pypi:
          filters:
            branches:
              only: /release\/.*/
          requires:
            - linux-python-310
            - linux-python-39
            - linux-python-38
            - linux-python-38-oldest
            - linux-python-310-signac-16
            - linux-python-310-signac-15
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - linux-python-310-signac-latest
#     - linux-python-310-signac-next
      - test-install-pip-python-310
      - test-install-pip-python-39
      - test-install-pip-python-38
      - test-install-conda
      - test-install-conda-python-310
      - test-install-conda-python-39
      - test-install-conda-python-38
  deploy:
    jobs:
      - deploy-pypi:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
